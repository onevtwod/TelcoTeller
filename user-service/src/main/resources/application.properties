# Application Configuration
spring.application.name=user-service
server.port=${SERVER_PORT:8081}
server.servlet.context-path=/api/v1

# Database Configuration (MyBatis + Flyway)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/telco}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:telco}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:telco}
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Migration Configuration (Industry Standard)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# MyBatis Configuration (Industry Standard ORM)
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.telco.userservice.model
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,flyway
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.com.telco.userservice=INFO
logging.level.org.mybatis=DEBUG
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# OpenAPI Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Disable JPA (using MyBatis instead)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false

# Redis Configuration (Industry Standard Caching)
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false
spring.cache.redis.enable-statistics=true

# Distributed Tracing Configuration
management.tracing.sampling.probability=1.0
management.tracing.zipkin.endpoint=http://jaeger:14268/api/v2/spans

# Kafka Configuration for Saga Events
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=user-service-saga-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Virtual Threads Configuration (Java 21)
spring.threads.virtual.enabled=true
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=100
spring.task.execution.pool.queue-capacity=1000

# Saga Configuration
saga.timeout.minutes=10
saga.step.timeout.minutes=2
saga.max.retry.attempts=3
saga.retry.delay.seconds=5
