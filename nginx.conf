events {
    worker_connections 1024;
}

http {
    upstream user-service {
        server user-service:8081;
        # Additional instances will be added dynamically by auto-scaler
    }

    upstream alert-trigger-service {
        server alert-trigger-service:8082;
        # Additional instances will be added dynamically by auto-scaler
    }

    upstream notification-service {
        server notification-service:8083;
        # Additional instances will be added dynamically by auto-scaler
    }

    upstream auto-scaler-service {
        server auto-scaler-service:8084;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Auto-scaler API
        location /api/autoscaler/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://auto-scaler-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # User Service API
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://user-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Alert Service API
        location /api/alerts/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://alert-trigger-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Notification Service API
        location /api/notifications/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://notification-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Default location
        location / {
            return 404 "Not Found\n";
            add_header Content-Type text/plain;
        }
    }
}
